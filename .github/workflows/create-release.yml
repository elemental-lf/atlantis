name: Create Atlantis release

on:
  workflow_dispatch:
  schedule:
    - cron: "23 6 * * *"

jobs:
  latest:
    name: Fetch information about latest versions
    runs-on: ubuntu-latest
    outputs:
      atlantis_version: ${{ steps.latest.outputs.atlantis_version }}
      terragrunt_version: ${{ steps.latest.outputs.terragruntversion }}
      infracost_version: ${{ steps.latest.outputs.infracost_version }}
    steps:
      - id: set-matrix
        name: Set matrix
        shell: bash
        run: |
          atlantis_version=$(curl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -s https://api.github.com/repos/runatlantis/atlantis/releases\?per_page\=100 | jq -r '[.[].tag_name] | map(capture("^v(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)\\.(?<patch>0|[1-9]\\d*)$")) | map({version: "\(.major).\(.minor).\(.patch)", major: .major | tonumber, minor: .minor | tonumber, patch:  .patch | tonumber}) | sort_by(.major, .minor, .patch) | reverse | .[:1] | .[] | .version | tostring')
          terragrunt_version=$(curl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -s https://api.github.com/repos/gruntwork-io/terragrunt/releases\?per_page\=100 | jq -r '[.[].tag_name] | map(capture("^v(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)\\.(?<patch>0|[1-9]\\d*)$")) | map({version: "\(.major).\(.minor).\(.patch)", major: .major | tonumber, minor: .minor | tonumber, patch:  .patch | tonumber}) | sort_by(.major, .minor, .patch) | reverse | .[:1] | .[] | .version | tostring')
          infracost_version=$(curl --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' -s https://api.github.com/repos/infracost/infracost/releases\?per_page\=100 | jq -r '[.[].tag_name] | map(capture("^v(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)\\.(?<patch>0|[1-9]\\d*)$")) | map({version: "\(.major).\(.minor).\(.patch)", major: .major | tonumber, minor: .minor | tonumber, patch:  .patch | tonumber}) | sort_by(.major, .minor, .patch) | reverse | .[:1] | .[] | .version | tostring')
          
          echo "atlantis_version=${atlantis_version}" >>$GITHUB_OUTPUT
          echo "terragrunt_version=${terragrunt_version}" >>$GITHUB_OUTPUT
          echo "infracost_version=${infracost_version}" >>$GITHUB_OUTPUT
          
  build:
    name: Create release for Atlantis ${{ atlantis_version}}, Terragrunt ${{ terragrunt_version }}, Infracost ${{ infracost_version }}
    needs: latest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_PAT }}
          
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/atlantis
          flavor: |
            latest=true
          tags: |
            type=raw,value=atlantis${{ needs.latest.outputs.atlantis_version }}-terragrunt${{ needs.latest.outputs.terragrunt_version }}-infracost${{ needs.latest.outputs.infracost_version }}
          labels: |
            atlantis-version=${{ needs.latest.outputs.atlantis_version }}
            terragrunt-version=${{ needs.latest.outputs.terragrunt_version }}
            infracost-version=${{ needs.latest.outputs.infracost_version }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            atlantis_version=${{ needs.latest.outputs.atlantis_version }}
            terragrunt_version=${{ needs.latest.outputs.terragrunt_version }
            infracost_version=v${{ needs.latest.outputs.infracost_version }}
          push: true
